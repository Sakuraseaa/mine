
# 7 "interrupt.c" 2
# 54 "interrupt.c"
void IRQ0x20_interrupt(void);
__asm__(
    "IRQ"
    "0x20"
    "_interrupt:    \n\t"
    "pushq $0x00 \n\t"
    "cld	\n\t"
    "pushq	%rax;		\n\t"
    "pushq	%rax;		\n\t"
    "movq	%es,	%rax;	\n\t"
    "pushq	%rax;		\n\t"
    "movq	%ds,	%rax;	\n\t"
    "pushq	%rax;		\n\t"
    "xorq	%rax,	%rax;	\n\t"
    "pushq	%rbp;		\n\t"
    "pushq	%rdi;		\n\t"
    "pushq	%rsi;		\n\t"
    "pushq	%rdx;		\n\t"
    "pushq	%rcx;		\n\t"
    "pushq	%rbx;		\n\t"
    "pushq	%r8;		\n\t"
    "pushq	%r9;		\n\t"
    "pushq	%r10;		\n\t"
    "pushq	%r11;		\n\t"
    "pushq	%r12;		\n\t"
    "pushq	%r13;		\n\t"
    "pushq	%r14;		\n\t"
    "pushq	%r15;		\n\t"
    "movq	$0x10,	%rdx;	\n\t"
    "movq	%rdx,	%ds;	\n\t"
    "movq	%rdx,	%es;	\n\t"
    "movq %rsp, %rdi \n\t"
    "leaq ret_from_intr(%rip), %rax \n\t"
    "pushq %rax \n\t"
    "movq $"
    "0x20"
    ", %rsi \n\t"
    "jmp do_IRQ \n\t");

void IRQ0x21_interrupt(void);
__asm__("IRQ"
        "0x21"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x21"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x22_interrupt(void);
__asm__("IRQ"
        "0x22"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x22"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x23_interrupt(void);
__asm__("IRQ"
        "0x23"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x23"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x24_interrupt(void);
__asm__("IRQ"
        "0x24"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x24"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x25_interrupt(void);
__asm__("IRQ"
        "0x25"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x25"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x26_interrupt(void);
__asm__("IRQ"
        "0x26"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x26"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x27_interrupt(void);
__asm__("IRQ"
        "0x27"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x27"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x28_interrupt(void);
__asm__("IRQ"
        "0x28"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x28"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x29_interrupt(void);
__asm__("IRQ"
        "0x29"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x29"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x2a_interrupt(void);
__asm__("IRQ"
        "0x2a"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x2a"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x2b_interrupt(void);
__asm__("IRQ"
        "0x2b"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x2b"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x2c_interrupt(void);
__asm__("IRQ"
        "0x2c"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x2c"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x2d_interrupt(void);
__asm__("IRQ"
        "0x2d"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x2d"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x2e_interrupt(void);
__asm__("IRQ"
        "0x2e"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x2e"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x2f_interrupt(void);
__asm__("IRQ"
        "0x2f"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x2f"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x30_interrupt(void);
__asm__("IRQ"
        "0x30"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x30"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x31_interrupt(void);
__asm__("IRQ"
        "0x31"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x31"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x32_interrupt(void);
__asm__("IRQ"
        "0x32"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x32"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x33_interrupt(void);
__asm__("IRQ"
        "0x33"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x33"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x34_interrupt(void);
__asm__("IRQ"
        "0x34"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x34"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x35_interrupt(void);
__asm__("IRQ"
        "0x35"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x35"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x36_interrupt(void);
__asm__("IRQ"
        "0x36"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x36"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");
void IRQ0x37_interrupt(void);
__asm__("IRQ"
        "0x37"
        "_interrupt:    \n\t"
        "pushq $0x00 \n\t"
        "cld;			\n\t"
        "pushq	%rax;		\n\t"
        "pushq	%rax;		\n\t"
        "movq	%es,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "movq	%ds,	%rax;	\n\t"
        "pushq	%rax;		\n\t"
        "xorq	%rax,	%rax;	\n\t"
        "pushq	%rbp;		\n\t"
        "pushq	%rdi;		\n\t"
        "pushq	%rsi;		\n\t"
        "pushq	%rdx;		\n\t"
        "pushq	%rcx;		\n\t"
        "pushq	%rbx;		\n\t"
        "pushq	%r8;		\n\t"
        "pushq	%r9;		\n\t"
        "pushq	%r10;		\n\t"
        "pushq	%r11;		\n\t"
        "pushq	%r12;		\n\t"
        "pushq	%r13;		\n\t"
        "pushq	%r14;		\n\t"
        "pushq	%r15;		\n\t"
        "movq	$0x10,	%rdx;	\n\t"
        "movq	%rdx,	%ds;	\n\t"
        "movq	%rdx,	%es;	\n\t"
        "movq %rsp, %rdi \n\t"
        "leaq ret_from_intr(%rip), %rax \n\t"
        "pushq %rax \n\t"
        "movq $"
        "0x37"
        ", %rsi \n\t"
        "jmp do_IRQ \n\t");

void (*interrupt[24])(void) =
    {
        IRQ0x20_interrupt,
        IRQ0x21_interrupt,
        IRQ0x22_interrupt,
        IRQ0x23_interrupt,
        IRQ0x24_interrupt,
        IRQ0x25_interrupt,
        IRQ0x26_interrupt,
        IRQ0x27_interrupt,
        IRQ0x28_interrupt,
        IRQ0x29_interrupt,
        IRQ0x2a_interrupt,
        IRQ0x2b_interrupt,
        IRQ0x2c_interrupt,
        IRQ0x2d_interrupt,
        IRQ0x2e_interrupt,
        IRQ0x2f_interrupt,
        IRQ0x30_interrupt,
        IRQ0x31_interrupt,
        IRQ0x32_interrupt,
        IRQ0x33_interrupt,
        IRQ0x34_interrupt,
        IRQ0x35_interrupt,
        IRQ0x36_interrupt,
        IRQ0x37_interrupt,
};
